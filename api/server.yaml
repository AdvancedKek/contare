openapi: 3.0.3
info:
  title: Contare API
  description: A simple contare API
  version: 1.0.0
paths:
  /customer:
    get:
      tags:
        - Customer
      summary: Find customer by ID
      description: Returns a list of customers
      operationId: getCustomerById
      parameters:
        - name: id
          in: query
          required: false
          description: ID of customer
          example: "4e519c68-9562-405d-8254-19c7d2925169"
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersResponse'
    post:
      tags:
        - Customer
      summary: Add a new customer
      description: Add a new customer
      operationId: addCustomer
      requestBody:
        description: Create a new customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
    put:
      tags:
        - Customer
      summary: Update an existing customer
      description: Update an existing customer
      operationId: updateCustomer
      requestBody:
        description: Update an existing customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
    delete:
      tags:
        - Customer
      summary: Delete an existing customer by ID
      description: Delete an existing customer
      operationId: deleteCustomer
      parameters:
        - name: id
          in: query
          required: true
          description: ID of customer
          example: "4e519c68-9562-405d-8254-19c7d2925169"
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successful operation
  /employer:
    get:
      tags:
        - Employer
      summary: Find employer by ID
      description: Returns a list of employers
      operationId: getEmployerById
      parameters:
        - name: id
          in: query
          required: false
          description: ID of employer
          example: "4e519c68-9562-405d-8254-19c7d2925169"
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployersResponse'
    post:
      tags:
        - Employer
      summary: Add a new employer
      description: Add a new employer
      operationId: addEmployer
      requestBody:
        description: Create a new employer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployerRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerResponse'
    put:
      tags:
        - Employer
      summary: Update an existing employer
      description: Update an existing employer
      operationId: updateEmployer
      requestBody:
        description: Update an existing employer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployerRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerResponse'
    delete:
      tags:
        - Employer
      summary: Delete an existing employer by ID
      description: Delete an existing employer
      operationId: deleteEmployer
      parameters:
        - name: id
          in: query
          required: true
          description: ID of employer
          example: "4e519c68-9562-405d-8254-19c7d2925169"
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successful operation
  /provider:
    get:
      tags:
        - Provider
      summary: Find provider by ID
      description: Returns a list of providers
      operationId: getProviderById
      parameters:
        - name: id
          in: query
          required: false
          description: ID of provider
          example: "4e519c68-9562-405d-8254-19c7d2925169"
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvidersResponse'
    post:
      tags:
        - Provider
      summary: Add a new provider
      description: Add a new provider
      operationId: addProvider
      requestBody:
        description: Create a new provider
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProviderRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
    put:
      tags:
        - Provider
      summary: Update an existing provider
      description: Update an existing provider
      operationId: updateProvider
      requestBody:
        description: Update an existing provider
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProviderRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
    delete:
      tags:
        - Provider
      summary: Delete an existing provider by ID
      description: Delete an existing provider
      operationId: deleteProvider
      parameters:
        - name: id
          in: query
          required: true
          description: ID of provider
          example: "4e519c68-9562-405d-8254-19c7d2925169"
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successful operation

components:
  schemas:
    CustomersResponse:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
    CustomerResponse:
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Customer'
    Customer:
      type: object
      required:
        - id
        - firstName
        - lastName
        - phone
        - address
        - email
      properties:
        id:
          type: string
          format: uuid
          description: ID of customer
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Galt
        patronymic:
          type: string
          example: Something's
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com
    CreateCustomerRequest:
      type: object
      required:
        - firstName
        - lastName
        - phone
        - address
        - email
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Galt
        patronymic:
          type: string
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com
    UpdateCustomerRequest:
      type: object
      required:
        - id
        - firstName
        - lastName
        - phone
        - address
        - email
      properties:
        id:
          type: string
          format: uuid
          description: ID of customer
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Galt
        patronymic:
          type: string
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com

    EmployersResponse:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Employer'
    EmployerResponse:
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Employer'
    Employer:
      type: object
      required:
        - id
        - firstName
        - lastName
        - phone
        - address
        - email
      properties:
        id:
          type: string
          format: uuid
          description: ID of employer
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Galt
        patronymic:
          type: string
          example: Something's
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com
    CreateEmployerRequest:
      type: object
      required:
        - firstName
        - lastName
        - phone
        - address
        - email
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Galt
        patronymic:
          type: string
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com
    UpdateEmployerRequest:
      type: object
      required:
        - id
        - firstName
        - lastName
        - phone
        - address
        - email
      properties:
        id:
          type: string
          format: uuid
          description: ID of employer
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Galt
        patronymic:
          type: string
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com

    ProvidersResponse:
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
    ProviderResponse:
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Provider'
    Provider:
      type: object
      required:
        - id
        - name
        - phone
        - address
        - email
      properties:
        id:
          type: string
          format: uuid
          description: ID of provider
        name:
          type: string
          example: Bosh
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com
    CreateProviderRequest:
      type: object
      required:
        - name
        - phone
        - address
        - email
      properties:
        name:
          type: string
          example: Bosh
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com
    UpdateProviderRequest:
      type: object
      required:
        - id
        - name
        - phone
        - address
        - email
      properties:
        id:
          type: string
          format: uuid
          description: ID of provider
        name:
          type: string
          example: Bosh
        phone:
          type: string
          example: +7 999 999 99 99
        address:
          type: string
          example: Al Raha Beach st.
        email:
          type: string
          example: galt@email.com